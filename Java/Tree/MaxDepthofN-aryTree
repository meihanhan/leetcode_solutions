/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val,List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
    public int maxDepth(Node root) {
        Queue<Node> s = new LinkedList();
        s.add(root);
        int level = 0;
        if(root == null){
            return level;
        }
        while(!s.isEmpty()){
            int size=s.size();
            level++;
            for(int i=0;i<size;i++){
                Node node=s.remove();
                for(int j = 0; j < node.children.size(); j++){
                    s.add(node.children.get(j));
                }
            }
        }
        return level; 
    }
}