/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode mergeTrees(TreeNode t1, TreeNode t2) {
        if (t1 == null){
            return t2;
        }
        Stack<TreeNode[]> s = new Stack();
        s.push(new TreeNode[] {t1, t2});
        while(!s.isEmpty()){
            TreeNode[] node = s.pop();
            if(node[0] == null || node[1] == null){
                continue;
            }
            node[0].val += node[1].val;
            if(node[0].left == null){
                node[0].left = node[1].left;
            }else {
                s.push(new TreeNode[] {node[0].left, node[1].left});
            }
            if(node[0].right == null){
                node[0].right = node[1].right;
            }else {
                s.push(new TreeNode[] {node[0].right, node[1].right});
            }
        }
        return t1;
    }
}